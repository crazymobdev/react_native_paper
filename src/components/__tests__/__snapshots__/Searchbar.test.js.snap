// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with placeholder 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderRadius": 4,
      "elevation": 4,
      "flexDirection": "row",
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 3,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 4,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": undefined,
        "borderColor": undefined,
        "borderRadius": 18,
        "borderWidth": 0,
        "height": 36,
        "margin": 6,
        "overflow": "hidden",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
        "width": 36,
      }
    }
  >
    <View
      accessibilityLabel="search"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontSize": 24,
            },
          ]
        }
      >
        □
      </Text>
    </View>
  </View>
  <TextInput
    accessibilityRole="search"
    allowFontScaling={true}
    keyboardAppearance="light"
    placeholder="Search"
    placeholderTextColor="rgba(0, 0, 0, 0.54)"
    rejectResponderTermination={true}
    returnKeyType="search"
    selectionColor="#6200ee"
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "flex": 1,
          "fontSize": 18,
          "minWidth": 0,
          "paddingLeft": 8,
          "textAlign": "left",
        },
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        undefined,
      ]
    }
    underlineColorAndroid="transparent"
  />
  <View
    style={
      Object {
        "backgroundColor": undefined,
        "borderColor": undefined,
        "borderRadius": 18,
        "borderWidth": 0,
        "height": 36,
        "margin": 6,
        "opacity": 0.32,
        "overflow": "hidden",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
        "width": 36,
      }
    }
  >
    <View
      accessibilityLabel="clear"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "color": "rgba(255, 255, 255, 0)",
              "fontSize": 24,
            },
          ]
        }
      >
        □
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders with text 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#ffffff",
      "borderRadius": 4,
      "elevation": 4,
      "flexDirection": "row",
      "shadowColor": "#000000",
      "shadowOffset": Object {
        "height": 3,
        "width": 0,
      },
      "shadowOpacity": 0.24,
      "shadowRadius": 4,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": undefined,
        "borderColor": undefined,
        "borderRadius": 18,
        "borderWidth": 0,
        "height": 36,
        "margin": 6,
        "overflow": "hidden",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
        "width": 36,
      }
    }
  >
    <View
      accessibilityLabel="search"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontSize": 24,
            },
          ]
        }
      >
        □
      </Text>
    </View>
  </View>
  <TextInput
    accessibilityRole="search"
    allowFontScaling={true}
    keyboardAppearance="light"
    placeholder="Search"
    placeholderTextColor="rgba(0, 0, 0, 0.54)"
    rejectResponderTermination={true}
    returnKeyType="search"
    selectionColor="#6200ee"
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "flex": 1,
          "fontSize": 18,
          "minWidth": 0,
          "paddingLeft": 8,
          "textAlign": "left",
        },
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        undefined,
      ]
    }
    underlineColorAndroid="transparent"
    value="query"
  />
  <View
    style={
      Object {
        "backgroundColor": undefined,
        "borderColor": undefined,
        "borderRadius": 18,
        "borderWidth": 0,
        "height": 36,
        "margin": 6,
        "overflow": "hidden",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
        "width": 36,
      }
    }
  >
    <View
      accessibilityLabel="clear"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "alignItems": "center",
            "flexGrow": 1,
            "justifyContent": "center",
          },
        ]
      }
    >
      <Text
        accessibilityElementsHidden={true}
        importantForAccessibility="no-hide-descendants"
        pointerEvents="none"
        selectable={false}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontSize": 24,
            },
          ]
        }
      >
        □
      </Text>
    </View>
  </View>
</View>
`;
